#!/bin/bash -e

# shellcheck source=src/mysql/scripts/mysql-utilities
. "$SNAP/scripts/mysql-utilities"

# Add password configuration to avoid password warning for mysql calls
if ! grep -q "password" "$CONFFILE"; then
  sed -i '/^\[client\]$/a password="glancr"' "$CONFFILE"
fi

snapctl start mirros-one.mysql

while [ ! -f "${RUNDIR}/mysqld.pid" ] && [ ! -S "${RUNDIR}/mysqld.sock" ]; do
  echo "waiting for mysqld"
  sleep 1
done

# Copy new migrations and gems from read-only location to writable mount
cp -rn "$SNAP"/api/bundle_installed/* "$SNAP_DATA"/rails/.bundle
cp -rn "$SNAP"/api/vendor_installed/* "$SNAP_DATA"/rails/vendor
cp -rn "$SNAP"/api/db_installed/* "$SNAP_DATA"/rails/db

# Overwrite lockfile so that default extensions and dependencies are up-to-date
cat "$SNAP"/api/Gemfile.lock_installed >"$SNAP_DATA"/rails/Gemfile.lock

cd "$SNAP"/api # required for bundler to find the gemfile
# force lock rewrite to include user-installed extensions
"$SNAP"/wrapper "$SNAP"/api/bin/bundle lock
"$SNAP"/wrapper "$SNAP"/api/bin/bundle clean # clean up old gem versions

SECRET_KEY_BASE=$(cat "$SNAP_DATA"/secret)
export SECRET_KEY_BASE
export RAILS_ENV=production

"$SNAP/wrapper" "$SNAP/api/bin/rails" extensions:install_migrations
# force AS installation if not installed yet
"$SNAP/wrapper" "$SNAP/api/bin/rails" active_storage:install
"$SNAP/wrapper" "$SNAP/api/bin/rails" db:migrate

# Seed new or changed seed values for running systems.
"$SNAP"/wrapper "$SNAP"/api/bin/rails db:seed_diff
"$SNAP"/wrapper "$SNAP"/api/bin/rails db:update_default_gems

# Overwrite existing nginx configuration: $SNAP points to a specific revision.
envsubst '${SNAP} ${SNAP_NAME} ${SNAP_COMMON}' >"$SNAP_COMMON/nginx.conf" <"$SNAP/nginx.conf"

# FIXME: Remove once https://github.com/snapcore/snapd/pull/5777 is in stable
snapctl stop --disable mirros-one.dns
