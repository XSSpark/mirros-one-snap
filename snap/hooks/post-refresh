#!/bin/bash -e

# 1.8.13 adds Redis server for ActionCable, requires writable directory.
mkdir -p "$SNAP_COMMON/redis/db" || true

# shellcheck source=src/mysql/scripts/mysql-utilities
. "$SNAP/scripts/mysql-utilities"

# Add password configuration to avoid password warning for mysql calls
if ! grep -q "password" "$CONFFILE"; then
  sed -i '/^\[client\]$/a password="glancr"' "$CONFFILE"
fi

# Enable explicit timestamp defaults for MySQL
if ! grep -q "explicit_defaults_for_timestamp=true" "$CONFFILE"; then
  sed -i '/^\[mysqld\]$/a explicit_defaults_for_timestamp=true' "$CONFFILE"
fi

snapctl start mirros-one.mysql
wait_for_mysql

echo "Checking/upgrading mysql tables if necessary..."
if mysql_upgrade --defaults-file="${CONFFILE}"; then
  echo "Restarting mysql server after upgrade..."
  snapctl restart mirros-one.mysql

  wait_for_mysql
fi

cd "$SNAP"/api # required for bundler to find the gemfile

SECRET_KEY_BASE=$(cat "$SNAP_DATA"/secret)
export SECRET_KEY_BASE
export RAILS_ENV=production

"$SNAP/wrapper" "$SNAP/api/bin/rails" db:migrate

# Seed new or changed seed values for running systems.
"$SNAP"/wrapper "$SNAP"/api/bin/rails db:seed_diff
"$SNAP"/wrapper "$SNAP"/api/bin/rails db:update_default_gems

# Overwrite existing nginx configuration: $SNAP points to a specific revision.
envsubst '${SNAP} ${SNAP_NAME} ${SNAP_COMMON}' >"$SNAP_COMMON/nginx.conf" <"$SNAP/nginx.conf"

# FIXME: Remove once https://github.com/snapcore/snapd/pull/5777 is in stable
snapctl stop --disable mirros-one.dns

# Start redis + backend and wait 15sec to ensure the display app can connect after the snap_update_status push
snapctl start mirros-one.redis
sleep 1
snapctl start mirros-one.backend
sleep 15

# Update SystemState.snap_update_status to notify websocket clients that the refresh is finishing.
"$SNAP/wrapper" "$SNAP/api/bin/rails" "system:set_snap_update_status[post-refresh]"
