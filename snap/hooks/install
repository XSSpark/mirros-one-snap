#!/bin/sh -e

# Run any commands needed to setup the snap.
# This could be downloading a list of dynamic configuration options or creating a database.

# Disables the DNS service to prevent it from starting automatically.
# FIXME: Remove once https://github.com/snapcore/snapd/pull/5777 is in stable
snapctl stop --disable mirros-one.dns

# AP setup
nmcli c add type wifi ifname '*' con-name glancrsetup autoconnect no ssid "glancr setup" mode ap -- ipv4.method manual ipv4.addresses 192.168.8.1 ipv4.dns 192.168.8.1 ipv4.gateway 192.168.8.1


# nginx setup. Limit substitution to SNAP and SNAP_COMMON to prevent overwriting nginx variables.
cat $SNAP/nginx.conf | envsubst '${SNAP_NAME} ${SNAP_COMMON}' > $SNAP_COMMON/nginx.conf
mkdir -p $SNAP_DATA/nginx/tmp
mkdir -p $SNAP_DATA/nginx/log

# Rails app setup
cd $SNAP/api
cp vendor_installed $SNAP_DATA/rails_vendor

# Generates an individual secret for each snap installation. Environment variables set here might not be present at all times across revisions, so we store it in a file. TODO: Check if we can leverage snap configuration.
$SNAP/bin/rails secret > $SNAP_DATA/secret

# Set up the API database.
SECRET_KEY_BASE=$(cat $SNAP_DATA/secret) RAILS_ENV=production $SNAP/bin/rails db:create db:migrate db:seed
