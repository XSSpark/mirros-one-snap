#!/bin/sh -e

# Run any commands needed to setup the snap.
# This could be downloading a list of dynamic configuration options or creating a database.

# Disables the DNS service to prevent it from starting automatically.
# FIXME: Remove once https://github.com/snapcore/snapd/pull/5777 is in stable
snapctl stop --disable mirros-one.dns

# AP setup has to happen in configure hook since we do not have the required interfaces at this point.

# nginx setup. Limit substitution to SNAP and SNAP_COMMON to prevent overwriting nginx variables.
cat $SNAP/nginx.conf | envsubst '${SNAP_NAME} ${SNAP_COMMON}' > $SNAP_COMMON/nginx.conf
mkdir -p $SNAP_COMMON/nginx/tmp
mkdir -p $SNAP_COMMON/nginx/log

# Rails app setup
cp -r $SNAP/api/vendor_installed/* $SNAP_DATA/rails/vendor
cp -r $SNAP/api/db_installed/* $SNAP_DATA/rails/db
cat $SNAP/api/Gemfile_installed > $SNAP_DATA/rails/Gemfile
cat $SNAP/api/Gemfile.lock_installed > $SNAP_DATA/rails/Gemfile.lock

cd $SNAP/api
# Generates an individual secret for each snap installation. Environment variables set here might not be present at all times across revisions, so we store it in a file. TODO: Check if we can leverage snap configuration.
$SNAP/api/bin/rails secret > $SNAP_DATA/secret

# FIXME: This installs the Openweathermap cities table. Make more generic for other default widgets.
SECRET_KEY_BASE=$(cat $SNAP_DATA/secret) RAILS_ENV=production  $SNAP/api/bin/rails openweathermap:install:migrations

# Set up the API database.
SECRET_KEY_BASE=$(cat $SNAP_DATA/secret) RAILS_ENV=production $SNAP/api/bin/rails db:create db:migrate db:seed
