name: mirros-one
base: core18
version: "0.3.1"
summary: An operating system tailored for smart mirrors.
description: |
  mirr.OS is the operating system for the glancr smart mirror,
  but can be used for other kiosk/display-only devices.
  Currently meant to be deployed on a Raspberry Pi (min model 3B).
  Learn more at https://glancr.de
grade: stable
confinement: strict

environment:
  RAILS_DATABASE_LOCATION: "$SNAP_DATA/production.sqlite3"
  # Specify confined paths so that hooks can access snapped bins/libs.
  PATH: "$SNAP/usr/sbin:$SNAP/usr/bin:$SNAP/sbin:$SNAP/bin:$PATH"
  LD_LIBRARY_PATH: "$LD_LIBRARY_PATH:$SNAP/lib:$SNAP/usr/lib:$SNAP/usr/lib/arm-linux-gnueabihf:$SNAP/usr/lib/x86_64-linux-gnu"
  RUBYLIB: "$SNAP/usr/lib/ruby/2.5.0:$SNAP/usr/lib/arm-linux-gnueabihf/ruby/2.5.0:$SNAP/usr/lib/x86_64-linux-gnu/ruby/2.5.0"
  GEM_HOME: "$SNAP/gems"
  GEM_PATH: "$SNAP"

hooks:
  install:
    plugs: [network]
  connect-plug-network-manager:
    plugs: [network-manager]

apps:
  # SERVICES
  backend:
    command: sh $SNAP/bin/start-stack.sh
    daemon: simple
    plugs: [network, network-bind, network-control, network-manager]
  nginx:
    command: usr/sbin/nginx -c $SNAP_COMMON/nginx.conf
    daemon: forking
    plugs: [network, network-bind]
  dns:
    command: dnsmasq -k -u root -g root -x $SNAP_USER_DATA/dnsmasq.pid -l $SNAP_DATA/dnsmasq.leases -C $SNAP/dnsmasq.conf
    daemon: simple
    plugs:
      - network
      - network-bind

  # COMMANDS
  setup:
    command: sh $SNAP/bin/setup.sh
    plugs: [network-manager]

# Supported since snapd 2.36, but snapcraft on the build farm is not up-to-date
passthrough:
  layout:
    $SNAP/api/tmp:
      bind: $SNAP_DATA/rails/tmp
    $SNAP/api/log:
      bind: $SNAP_DATA/rails/log
    $SNAP/api/db:
      bind: $SNAP_DATA/rails/db
    $SNAP/api/vendor:
      bind: $SNAP_DATA/rails/vendor
    $SNAP/api/Gemfile:
      bind-file: $SNAP_DATA/rails/Gemfile
    $SNAP/api/Gemfile.lock:
      bind-file: $SNAP_DATA/rails/Gemfile.lock

parts:
  nginx:
    source: src/nginx
    stage-packages: [nginx, gettext-base, libatm1, libxtables12]
    plugin: dump

  dnsmasq:
    source: src/dnsmasq
    plugin: dump
    stage-packages: [dnsmasq, libnetfilter-conntrack3]
    # organize:
    #   usr/sbin/dnsmasq: bin/dnsmasq
    # filesets:
    #  binandconf:
    #    - bin/dnsmasq
    #    - dnsmasq.conf
    # stage:
    #   - $binandconf
    # prime:
    #   - $binandconf
    #   - usr/lib/

  mirros-display:
    source: https://gitlab.com/glancr/mirros_display/-/jobs/artifacts/0.1.0/download?job=build-tag
    source-type: zip
    plugin: dump
    organize:
      dist: display

  mirros-settings:
    source: https://gitlab.com/glancr/mirros_settings/-/jobs/artifacts/0.1.0/download?job=build-tag
    source-type: zip
    plugin: dump
    organize:
      dist: settings

  mirros-api:
    source: https://gitlab.com/glancr/mirros_api.git
    source-branch: master
    # source-tag: $SNAPCRAFT_PROJECT_VERSION
    source-depth: 1
    build-packages: [ruby-dev, build-essential, zlib1g-dev, libsqlite3-dev]
    stage-packages:
      - libatm1
      - libxtables12
      - ruby
      - sqlite3
      - wireless-tools
      - network-manager
    plugin: dump
    override-build: |
      ruby --version
      mkdir $SNAPCRAFT_PART_INSTALL/api
      cp -a * $SNAPCRAFT_PART_INSTALL/api

      # export GEM_HOME=gems
      # export GEM_PATH=.
      gem install --no-document bundler

      snapcraftctl build
      gem environment
      cd $SNAPCRAFT_PART_INSTALL/api
      bin/bundle install --path vendor/bundle --without development test

      # To allow installing new gems in the snap, they have to be in $SNAP_DATA.
      # Layouts above maps a bind-mount.
      mv vendor vendor_installed
      mv Gemfile Gemfile_installed
      mv Gemfile.lock Gemfile.lock_installed
      mv db db_installed

      # Ensure that snap version and Rails backend version are in sync
      echo "SNAP_VERSION = '$SNAPCRAFT_PROJECT_VERSION'.freeze" > config/version.rb

      # TODO: Remove once those are untracked
      rm -rf $SNAPCRAFT_PART_INSTALL/api/tmp $SNAPCRAFT_PART_INSTALL/api/log
    stage:
      - api
      - usr/lib/*
      - usr/bin/*

    override-prime: |
      snapcraftctl prime
      export GEM_HOME=gems
      export GEM_PATH=.
      gem install --no-document bundler

  # Scripts and wrappers
  start-stack:
    source: src/start-stack
    plugin: dump
  setup:
    source: src/setup
    plugin: dump
