# Variables will be substituted in install hook.

user root;
pid $SNAP_COMMON/nginx.pid;
error_log $SNAP_COMMON/nginx_error.log error;

events {
    worker_connections 768;
}

http {
    ##
    # General
    ##
    sendfile on;

    include /snap/$SNAP_NAME/current/etc/nginx/mime.types;

    # We need to place all temporary files in writable locations.
    client_body_temp_path $SNAP_COMMON/nginx/tmp/body;
    proxy_temp_path $SNAP_COMMON/nginx/tmp/proxy;
    fastcgi_temp_path $SNAP_COMMON/nginx/tmp/fastcgi;
    uwsgi_temp_path $SNAP_COMMON/nginx/tmp/uswgi;
    scgi_temp_path $SNAP_COMMON/nginx/tmp/scgi;

    # Serve files from the snap base directory.
    root /snap/$SNAP_NAME/current; # TODO: Find a more suitable location

    # Server for access over local networks.
    server {
        listen *:80 default_server;

        error_log $SNAP_COMMON/nginx/log/error_main.log error;
        access_log $SNAP_COMMON/nginx/log/access_main.log combined;


        location = / {
            return 301 /settings;
        }
        location /api/ {
            proxy_pass http://127.0.0.1:3000/;
        }
    }
    server {
        server_name glancr.conf localhost;
        listen 192.168.8.1:80;

        error_log $SNAP_COMMON/nginx_error_setup.log error;
        access_log $SNAP_COMMON/nginx_access_setup.log combined;

        location /api/ {
            proxy_pass http://127.0.0.1:3000/;
        }

    }
    server {
        listen 192.168.8.1:80 default_server;

        access_log $SNAP_COMMON/nginx_access_redirect.log combined;
        error_log $SNAP_COMMON/nginx_error_redirect.log error;

        if ($http_user_agent ~* "^CaptiveNetworkSupport") {
            rewrite ^(.*)$ http://glancr.conf/settings/ redirect;
        }
        rewrite ^/hotspot-detect.html$ http://glancr.conf/settings/ redirect;
        rewrite ^/generate_204$ http://glancr.conf/settings/ redirect;
    }
}
